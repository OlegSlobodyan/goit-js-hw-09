{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,aAAcF,SAASC,cAAc,qBAMjCE,EAAQ,GACdL,EAAKC,KAAKK,iBAAiB,SAAS,SAAAC,GAClCF,EAAME,EAAEC,OAAOC,MAAQC,OAAOH,EAAEC,OAAOG,M,IAGzC,IAAIC,EAAiB,EAErBZ,EAAKI,aAAaE,iBAAiB,SAAS,WAC1CO,YAAW,WACT,IAAMC,EAAaC,aAAY,WAyBnC,IAAuBC,EAAUC,GAAVD,EAxBHJ,EAwBaK,EAxBGZ,EAAMY,MAyBjC,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,IAGpCH,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,S,KA9BdM,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUC,EAAKO,EAALP,MACjBQ,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAGjDY,OAAM,SAAAL,G,IAAGR,EAAQQ,EAARR,SAAUC,EAAKO,EAALP,MAClBQ,EAAA3B,GAAS4B,OAAOI,QACd,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAI7CL,IAAmBP,EAAM0B,SAC3BnB,EAAiB,EACjBP,EAAMY,MAAQ,EACde,aAAalB,IAGfF,GAAkB,EAClBP,EAAMY,OAASZ,EAAM4B,I,GACpB5B,EAAM4B,K,GACR5B,EAAMY,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  form: document.querySelector('.form'),\n  submitButton: document.querySelector('.create-promises'),\n  // valueInput: document.querySelector('first-delay.')\n};\n// const delayValue = 0;\n// refs.valueInput.addEventListener('input', (e) =>\n// delayValue = e.target.value)\nconst value = {};\nrefs.form.addEventListener('input', e => {\n  value[e.target.name] = Number(e.target.value);\n});\n\nlet promiseCounter = 1;\n\nrefs.submitButton.addEventListener('click', () => {\n  setTimeout(() => {\n    const intervalId = setInterval(() => {\n      createPromise(promiseCounter, value.delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n\n      if (promiseCounter === value.amount) {\n        promiseCounter = 0;\n        value.delay = 0;\n        clearTimeout(intervalId);\n      }\n\n      promiseCounter += 1;\n      value.delay += value.step;\n    }, value.step);\n  }, value.delay);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    }\n    reject({ position, delay });\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","submitButton","$ce04d3a99e08e73b$var$value","addEventListener","e","target","name","Number","value","$ce04d3a99e08e73b$var$promiseCounter","setTimeout","intervalId","setInterval","position","delay","Promise","resolve","reject","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","amount","clearTimeout","step"],"version":3,"file":"03-promises.d1198ce0.js.map"}