{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,aAAcF,SAASC,cAAc,oBACrCE,WAAYH,SAASC,cAAc,iBAGrCH,EAAKK,WAAWC,iBAAiB,SAAS,SAACC,G,OAC9BA,EAAEC,OAAOC,K,IACtB,IAAMC,EAAQ,GA2Cd,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IApDPb,EAAKC,KAAKK,iBAAiB,SAAS,SAAAC,GAClCG,EAAMH,EAAEC,OAAOY,MAAQC,OAAOd,EAAEC,OAAOC,M,IAIzCa,QAAQC,IAAIb,GAEZV,EAAKC,KAAKK,iBAAiB,UAAU,SAACC,GACpCA,EAAEiB,iBACA,IAEmBC,EAAflB,EAAEmB,cADJC,SAAYC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAE7BR,QAAQC,IAAI,IAAoBQ,OAAhBH,EAAMnB,MAAM,MAAmBsB,OAAfF,EAAKpB,MAAM,MAAiBsB,OAAbD,EAAOrB,QACpDC,EAAMG,MAAQe,EAAMnB,MAEtB,IAAK,IAAIuB,EAAI,EAAGA,GAAKF,EAAOrB,MAAOuB,GAAK,EACtCV,QAAQC,IAAIS,GACZrB,EAAcqB,EAAGtB,EAAMG,OACpBoB,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAArC,GAASsC,OAAOC,QACd,uBAAwCN,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M,IAGjDyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAArC,GAASsC,OAAOG,QACd,sBAAqCR,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M,IAIjDH,EAAMG,MAAQQ,OAAOQ,EAAKpB,OAASY,OAAOX,EAAMG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  form: document.querySelector('.form'),\n  submitButton: document.querySelector('.create-promises'),\n  valueInput: document.querySelector('.first-delay')\n};\nlet delayValue = 0;\nrefs.valueInput.addEventListener('input', (e) =>\ndelayValue = e.target.value)\nconst value = {};\nrefs.form.addEventListener('input', e => {\n  value[e.target.name] = Number(e.target.value);\n\n});\n\nconsole.log(value);\n\nrefs.form.addEventListener('submit', (e) => {\n  e.preventDefault();\n    let {\n      elements: { delay, step, amount },\n    } = e.currentTarget;\n  console.log(` ${delay.value}, ${step.value}, ${amount.value}`);\n    value.delay = delay.value;\n  \n  for (let i = 1; i <= amount.value; i += 1) {\n    console.log(i);\n    createPromise(i, value.delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success( \n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    // delay += step.value;\n    value.delay = Number(step.value) + Number(value.delay);\n\n  }\n  // if (promiseCounter === value.amount) {\n  //   promiseCounter = 0;\n  //   value.delay = 0;\n  //   clearTimeout(intervalId);\n  // }\n\n\n  \n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n// console.log('qwqweq');"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","submitButton","valueInput","addEventListener","e","target","value","$ce04d3a99e08e73b$var$value","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","name","Number","console","log","preventDefault","_elements","currentTarget","elements","delay1","step","amount","concat","i","then","param","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.cdf338e5.js.map"}