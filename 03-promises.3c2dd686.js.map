{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,aAAcF,SAASC,cAAc,oBACrCE,WAAYH,SAASC,cAAc,iBAkCrC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAzCPR,EAAKK,WAAWU,iBAAiB,SAAS,SAAAC,G,OAAMC,WAAaD,EAAEE,OAAOC,K,IAEtEnB,EAAKK,WAAWU,iBAAiB,SAAS,SAAAC,GACvBI,OAAOJ,EAAEE,OAAOC,M,IAGnCnB,EAAKC,KAAKc,iBAAiB,UAAU,SAAAC,GACnCA,EAAEK,iBACF,IAEmBC,EAAfN,EAAEO,cADJC,SAAYC,EAAKH,EAALd,MAAOkB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAE3BC,QAAQC,IAAI,IAAoBC,OAAhBL,EAAMN,MAAM,MAAmBW,OAAfJ,EAAKP,MAAM,MAAiBW,OAAbH,EAAOR,QACtDF,WAAaQ,EAAMN,MAEnB,IAAK,IAAIY,EAAI,EAAGA,GAAKJ,EAAOR,MAAOY,GAAK,EACtCzB,EAAcyB,EAAGd,YACde,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAApC,GAASqC,OAAOC,QACd,uBAAwCN,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjD6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAApC,GAASqC,OAAOG,QACd,sBAAqCR,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAIjDS,WAAaG,OAAOM,EAAKP,OAASC,OAAOH,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  form: document.querySelector('.form'),\n  submitButton: document.querySelector('.create-promises'),\n  valueInput: document.querySelector('.first-delay'),\n};\n\nrefs.valueInput.addEventListener('input', e => (delayValue = e.target.value));\n\nrefs.valueInput.addEventListener('input', e => {\n  let delayValue = Number(e.target.value);\n});\n\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n  let {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  console.log(` ${delay.value}, ${step.value}, ${amount.value}`);\n  delayValue = delay.value;\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delayValue = Number(step.value) + Number(delayValue);\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","submitButton","valueInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","delayValue","target","value","Number","preventDefault","_elements","currentTarget","elements","delay1","step","amount","console","log","concat","i","then","param","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.3c2dd686.js.map"}