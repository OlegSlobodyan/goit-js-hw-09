{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,aAAcF,SAASC,cAAc,oBACrCE,WAAYH,SAASC,cAAc,iBAErC,IAAIG,EAAa,EACjBN,EAAKK,WAAWE,iBAAiB,SAAUC,GAC3CF,EAAaE,EAAEC,OAAOC,QACtB,MAAMC,EAAQ,GA2Cd,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CApDbd,EAAKC,KAAKM,iBAAiB,SAASC,IAClCG,EAAMH,EAAEC,OAAOY,MAAQC,OAAOd,EAAEC,OAAOC,MAAM,IAI/Ca,QAAQC,IAAIb,GAEZX,EAAKC,KAAKM,iBAAiB,UAAWC,IACpCA,EAAEiB,iBACA,IACEC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACvBrB,EAAEsB,cACRP,QAAQC,IAAI,IAAIG,EAAMjB,UAAUkB,EAAKlB,UAAUmB,EAAOnB,SACpDC,EAAMG,MAAQa,EAAMjB,MAEtB,IAAK,IAAIqB,EAAI,EAAGA,GAAKF,EAAOnB,MAAOqB,GAAK,EACtCR,QAAQC,IAAIO,GACZnB,EAAcmB,EAAGpB,EAAMG,OACpBkB,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAAnC,GAASoC,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAAnC,GAASoC,OAAOG,QACd,sBAAoBxB,QAAeC,MAAU,IAInDH,EAAMG,MAAQQ,OAAOM,EAAKlB,OAASY,OAAOX,EAAMG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  form: document.querySelector('.form'),\n  submitButton: document.querySelector('.create-promises'),\n  valueInput: document.querySelector('.first-delay')\n};\nlet delayValue = 0;\nrefs.valueInput.addEventListener('input', (e) =>\ndelayValue = e.target.value)\nconst value = {};\nrefs.form.addEventListener('input', e => {\n  value[e.target.name] = Number(e.target.value);\n\n});\n\nconsole.log(value);\n\nrefs.form.addEventListener('submit', (e) => {\n  e.preventDefault();\n    let {\n      elements: { delay, step, amount },\n    } = e.currentTarget;\n  console.log(` ${delay.value}, ${step.value}, ${amount.value}`);\n    value.delay = delay.value;\n  \n  for (let i = 1; i <= amount.value; i += 1) {\n    console.log(i);\n    createPromise(i, value.delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success( \n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    // delay += step.value;\n    value.delay = Number(step.value) + Number(value.delay);\n\n  }\n  // if (promiseCounter === value.amount) {\n  //   promiseCounter = 0;\n  //   value.delay = 0;\n  //   clearTimeout(intervalId);\n  // }\n\n\n  \n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n// console.log('qwqweq');"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","submitButton","valueInput","$47d4ff9957288465$var$delayValue","addEventListener","e","target","value","$47d4ff9957288465$var$value","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","name","Number","console","log","preventDefault","elements","delay1","step","amount","currentTarget","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.a615c84b.js.map"}